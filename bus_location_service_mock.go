// Code generated by MockGen. DO NOT EDIT.
// Source: bus_location_service.go

// Package main is a generated GoMock package.
package main

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBusLocationService is a mock of BusLocationService interface
type MockBusLocationService struct {
	ctrl     *gomock.Controller
	recorder *MockBusLocationServiceMockRecorder
}

// MockBusLocationServiceMockRecorder is the mock recorder for MockBusLocationService
type MockBusLocationServiceMockRecorder struct {
	mock *MockBusLocationService
}

// NewMockBusLocationService creates a new mock instance
func NewMockBusLocationService(ctrl *gomock.Controller) *MockBusLocationService {
	mock := &MockBusLocationService{ctrl: ctrl}
	mock.recorder = &MockBusLocationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBusLocationService) EXPECT() *MockBusLocationServiceMockRecorder {
	return m.recorder
}

// GetBusTimesByStopCode mocks base method
func (m *MockBusLocationService) GetBusTimesByStopCode(arg0 string) ([]BusTime, error) {
	ret := m.ctrl.Call(m, "GetBusTimesByStopCode", arg0)
	ret0, _ := ret[0].([]BusTime)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBusTimesByStopCode indicates an expected call of GetBusTimesByStopCode
func (mr *MockBusLocationServiceMockRecorder) GetBusTimesByStopCode(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBusTimesByStopCode", reflect.TypeOf((*MockBusLocationService)(nil).GetBusTimesByStopCode), arg0)
}
